%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../gfx/CombinedBestGenomeVSens-All.eps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Sat Mar 19 12:42:03 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 625 481
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../gfx/CombinedBestGenomeVSens-All.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (eagerm)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar 19 12:42:03 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 625 50 lineto 625 481 lineto 50 481 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
7933 1420 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 7849 1420 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-2)]
] -86.7 MRshow
0.500 UL
LTb
7933 3056 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 7849 3056 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-1)]
] -86.7 MRshow
0.500 UL
LTb
7933 4691 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 7849 4691 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (0)]
] -86.7 MRshow
0.500 UL
LTb
7933 6327 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 7849 6327 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (1)]
] -86.7 MRshow
0.500 UL
LTb
7933 7962 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 7849 7962 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
] -86.7 MRshow
0.500 UL
LTb
8343 928 M
0 88 V
0 6946 R
0 -88 V
stroke
8343 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-5)]
] -86.7 MCshow
0.500 UL
LTb
8754 928 M
0 88 V
0 6946 R
0 -88 V
stroke
8754 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-4)]
] -86.7 MCshow
0.500 UL
LTb
9164 928 M
0 88 V
0 6946 R
0 -88 V
stroke
9164 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-3)]
] -86.7 MCshow
0.500 UL
LTb
9575 928 M
0 88 V
0 6946 R
0 -88 V
stroke
9575 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-2)]
] -86.7 MCshow
0.500 UL
LTb
9986 928 M
0 88 V
0 6946 R
0 -88 V
stroke
9986 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-1)]
] -86.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
7933 7962 N
0 -7034 V
2463 0 V
0 7034 V
-2463 0 V
Z stroke
0.00 0.00 0.00 C 9164 578 M
[ [(Symbol) 200.0 0.0 true true 0 (D)]
[(Helvetica) 200.0 0.0 true true 0 ( )]
[(Symbol) 200.0 0.0 true true 0 (Y)]
[(Helvetica) 160.0 -60.0 true true 0 (AIV)]
[(Helvetica) 200.0 0.0 true true 0 (/\()]
[(Symbol) 200.0 0.0 true true 0 (D)]
[(Helvetica) 200.0 0.0 true true 0 ( )]
[(Helvetica) 200.0 0.0 true true 0 (p)]
[(Helvetica) 160.0 -60.0 true true 0 (i)]
[(Helvetica) 200.0 0.0 true true 0 (/p)]
[(Helvetica) 160.0 100.0 true true 0 (\\)]
[(Helvetica) 200.0 0.0 true true 0 (ast)]
[(Helvetica) 160.0 -60.0 true true 0 (i)]
[(Helvetica) 200.0 0.0 true true 0 (\))]
] -66.7 MCshow
LTb
1.000 UP
0.500 UL
LTb
% Begin plot #1
1.167 UP
0.500 UL
LT0
1.00 0.00 0.00 C 9262 4582 BoxF
9801 3276 BoxF
9717 4730 BoxF
9267 4442 BoxF
9624 4257 BoxF
9637 4222 BoxF
9393 4691 BoxF
9653 4357 BoxF
9272 4691 BoxF
9292 4623 BoxF
9108 3309 BoxF
9454 5556 BoxF
9332 4199 BoxF
9199 5410 BoxF
9671 4089 BoxF
9262 5278 BoxF
9878 3768 BoxF
9717 4123 BoxF
9327 3827 BoxF
9624 4211 BoxF
9637 3774 BoxF
9393 4251 BoxF
9706 3502 BoxF
9567 2897 BoxF
9653 2722 BoxF
9312 3309 BoxF
9454 4582 BoxF
9332 3781 BoxF
9199 5918 BoxF
9806 3801 BoxF
9262 5278 BoxF
9878 2988 BoxF
9717 4141 BoxF
9267 3335 BoxF
9624 3718 BoxF
9672 4089 BoxF
9328 4744 BoxF
9655 3865 BoxF
9567 1625 BoxF
9653 4283 BoxF
9278 4328 BoxF
9272 4629 BoxF
9292 6825 BoxF
9108 4089 BoxF
9292 4164 BoxF
9332 2638 BoxF
9124 4403 BoxF
9806 4691 BoxF
% End plot #1
% Begin plot #2
1.667 UP
0.500 UL
LT1
0.00 0.00 1.00 C 9405 4264 DiaF
9100 5007 DiaF
8970 5688 DiaF
9000 3801 DiaF
8894 4691 DiaF
9159 5047 DiaF
8891 5614 DiaF
8816 6168 DiaF
8824 5138 DiaF
8767 3801 DiaF
8360 6456 DiaF
9193 4169 DiaF
8884 5370 DiaF
9565 3464 DiaF
8970 6311 DiaF
9000 4199 DiaF
8894 5405 DiaF
9159 6146 DiaF
8825 4308 DiaF
8891 5546 DiaF
9008 3973 DiaF
8816 4403 DiaF
8824 3214 DiaF
8767 6073 DiaF
8360 6770 DiaF
9033 5923 DiaF
9519 3911 DiaF
8884 5313 DiaF
9405 3772 DiaF
8970 6332 DiaF
9000 3801 DiaF
8894 5388 DiaF
8891 5614 DiaF
8816 5923 DiaF
8865 3995 DiaF
8824 6903 DiaF
8606 3309 DiaF
8360 6582 DiaF
9519 2750 DiaF
8321 4040 DiaF
% End plot #2
% Begin plot #3
1.667 UP
0.500 UL
LT2
0.00 0.00 1.00 C 9683 1420 Circle
% End plot #3
% Begin plot #4
1.667 UP
0.500 UL
LT3
1.00 0.00 0.00 C 9084 1420 Circle
% End plot #4
% Begin plot #5
4.000 UL
LT4
0.00 0.00 0.00 C 8321 5487 M
9717 4564 L
% End plot #5
% Begin plot #6
stroke
0.500 UL
LT5
0.00 0.00 0.00 C 8321 5871 M
9878 3585 L
% End plot #6
1.000 UP
stroke
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
4704 1420 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 4620 1420 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-2)]
] -86.7 MRshow
0.500 UL
LTb
4704 3056 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 4620 3056 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-1)]
] -86.7 MRshow
0.500 UL
LTb
4704 4691 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 4620 4691 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (0)]
] -86.7 MRshow
0.500 UL
LTb
4704 6327 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 4620 6327 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (1)]
] -86.7 MRshow
0.500 UL
LTb
4704 7962 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 4620 7962 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
] -86.7 MRshow
0.500 UL
LTb
5320 928 M
0 88 V
0 6946 R
0 -88 V
stroke
5320 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-4)]
] -86.7 MCshow
0.500 UL
LTb
5936 928 M
0 88 V
0 6946 R
0 -88 V
stroke
5936 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-3)]
] -86.7 MCshow
0.500 UL
LTb
6551 928 M
0 88 V
0 6946 R
0 -88 V
stroke
6551 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-2)]
] -86.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
4704 7962 N
0 -7034 V
2463 0 V
0 7034 V
-2463 0 V
Z stroke
0.00 0.00 0.00 C 5935 578 M
[ [(Symbol) 200.0 0.0 true true 0 (D)]
[(Helvetica) 200.0 0.0 true true 0 ( )]
[(Symbol) 200.0 0.0 true true 0 (Y)]
[(Helvetica) 160.0 -60.0 true true 0 (IFR)]
[(Helvetica) 200.0 0.0 true true 0 (/\()]
[(Symbol) 200.0 0.0 true true 0 (D)]
[(Helvetica) 200.0 0.0 true true 0 ( )]
[(Helvetica) 200.0 0.0 true true 0 (p)]
[(Helvetica) 160.0 -60.0 true true 0 (i)]
[(Helvetica) 200.0 0.0 true true 0 (/p)]
[(Helvetica) 160.0 100.0 true true 0 (\\)]
[(Helvetica) 200.0 0.0 true true 0 (ast)]
[(Helvetica) 160.0 -60.0 true true 0 (i)]
[(Helvetica) 200.0 0.0 true true 0 (\))]
] -66.7 MCshow
LTb
1.000 UP
0.500 UL
LTb
% Begin plot #1
1.167 UP
0.500 UL
LT0
1.00 0.00 0.00 C 6263 4452 BoxF
6980 2988 BoxF
6747 3556 BoxF
6160 4363 BoxF
6687 4307 BoxF
6106 4634 BoxF
6507 4544 BoxF
6598 4645 BoxF
6157 2563 BoxF
6242 6160 BoxF
6405 4164 BoxF
6206 4199 BoxF
5992 5759 BoxF
6731 2834 BoxF
6891 5012 BoxF
6955 3973 BoxF
6747 1995 BoxF
6185 4577 BoxF
6690 2780 BoxF
6580 3774 BoxF
6318 4012 BoxF
6752 3865 BoxF
6598 4544 BoxF
6167 5183 BoxF
6242 6215 BoxF
6222 4164 BoxF
6421 4895 BoxF
5992 6007 BoxF
6731 3928 BoxF
6891 5012 BoxF
6737 3176 BoxF
6980 3639 BoxF
6746 2980 BoxF
6160 4225 BoxF
6687 2630 BoxF
6106 4691 BoxF
6752 4283 BoxF
6598 4104 BoxF
6167 5435 BoxF
6242 6593 BoxF
6405 5632 BoxF
6421 4865 BoxF
5992 4199 BoxF
6731 4500 BoxF
6891 5362 BoxF
% End plot #1
% Begin plot #2
1.667 UP
0.500 UL
LT1
0.00 0.00 1.00 C 5866 3176 DiaF
6431 3923 DiaF
6122 5211 DiaF
5873 4786 DiaF
5807 4786 DiaF
5647 4737 DiaF
5697 4069 DiaF
5904 5054 DiaF
5688 4089 DiaF
5559 5546 DiaF
5750 6146 DiaF
5748 6731 DiaF
5116 5183 DiaF
5318 5370 DiaF
5866 4403 DiaF
5587 3801 DiaF
6122 4805 DiaF
5873 6193 DiaF
5825 4452 DiaF
5593 4403 DiaF
5697 3911 DiaF
5904 5054 DiaF
5688 4294 DiaF
5008 4403 DiaF
5750 5779 DiaF
5355 5012 DiaF
5748 5676 DiaF
5116 6106 DiaF
5342 4040 DiaF
5587 5131 DiaF
6431 2938 DiaF
6122 4279 DiaF
5873 6073 DiaF
5825 4294 DiaF
5647 4963 DiaF
5697 4691 DiaF
5904 5733 DiaF
5688 4452 DiaF
5559 4895 DiaF
5750 6327 DiaF
5355 4786 DiaF
5748 5676 DiaF
5116 5388 DiaF
5318 5517 DiaF
% End plot #2
% Begin plot #3
1.667 UP
0.500 UL
LT2
0.00 0.00 1.00 C 5235 1420 Circle
% End plot #3
% Begin plot #4
4.000 UL
LT3
0.00 0.00 0.00 C 5008 5356 M
6891 3630 L
% End plot #4
% Begin plot #5
stroke
0.500 UL
LT4
0.00 0.00 0.00 C 5008 5534 M
6980 3875 L
% End plot #5
1.000 UP
stroke
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1475 1420 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 1420 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-2)]
] -86.7 MRshow
0.500 UL
LTb
1475 3056 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 3056 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-1)]
] -86.7 MRshow
0.500 UL
LTb
1475 4691 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 4691 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (0)]
] -86.7 MRshow
0.500 UL
LTb
1475 6327 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 6327 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (1)]
] -86.7 MRshow
0.500 UL
LTb
1475 7962 M
88 0 V
2375 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 7962 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
] -86.7 MRshow
0.500 UL
LTb
1885 928 M
0 88 V
0 6946 R
0 -88 V
stroke
1885 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-3)]
] -86.7 MCshow
0.500 UL
LTb
2296 928 M
0 88 V
0 6946 R
0 -88 V
stroke
2296 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-2)]
] -86.7 MCshow
0.500 UL
LTb
2706 928 M
0 88 V
0 6946 R
0 -88 V
stroke
2706 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (-1)]
] -86.7 MCshow
0.500 UL
LTb
3117 928 M
0 88 V
0 6946 R
0 -88 V
stroke
3117 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (0)]
] -86.7 MCshow
0.500 UL
LTb
3527 928 M
0 88 V
0 6946 R
0 -88 V
stroke
3527 788 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
[(Helvetica) 160.0 100.0 true true 0 (1)]
] -86.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 7962 N
0 -7034 V
2463 0 V
0 7034 V
-2463 0 V
Z stroke
0.00 0.00 0.00 C 985 4445 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Relative Genome Error)]
] -66.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 2706 578 M
[ [(Symbol) 200.0 0.0 true true 0 (D)]
[(Helvetica) 200.0 0.0 true true 0 ( )]
[(Symbol) 200.0 0.0 true true 0 (Y)]
[(Helvetica) 160.0 -60.0 true true 0 (ST)]
[(Helvetica) 200.0 0.0 true true 0 (/\()]
[(Symbol) 200.0 0.0 true true 0 (D)]
[(Helvetica) 200.0 0.0 true true 0 ( )]
[(Helvetica) 200.0 0.0 true true 0 (p)]
[(Helvetica) 160.0 -60.0 true true 0 (i)]
[(Helvetica) 200.0 0.0 true true 0 (/p)]
[(Helvetica) 160.0 100.0 true true 0 (\\)]
[(Helvetica) 200.0 0.0 true true 0 (ast)]
[(Helvetica) 160.0 -60.0 true true 0 (i)]
[(Helvetica) 200.0 0.0 true true 0 (\))]
] -66.7 MCshow
LTb
1.000 UP
0.500 UL
LTb
% Begin plot #1
1.167 UP
0.500 UL
LT0
1.00 0.00 0.00 C 2680 5362 BoxF
3206 2988 BoxF
3213 1503 BoxF
3015 4053 BoxF
3094 2780 BoxF
3354 3411 BoxF
3003 2869 BoxF
3486 3995 BoxF
3263 1625 BoxF
2663 4821 BoxF
2734 4562 BoxF
2736 6045 BoxF
2747 4452 BoxF
2859 5012 BoxF
2893 3131 BoxF
2823 5183 BoxF
2625 4452 BoxF
3180 4461 BoxF
3606 4944 BoxF
2890 4930 BoxF
2680 5566 BoxF
3206 4056 BoxF
3412 1503 BoxF
2915 4834 BoxF
3276 3957 BoxF
3368 4495 BoxF
3113 3650 BoxF
3356 4425 BoxF
3129 3991 BoxF
3576 3995 BoxF
2663 5351 BoxF
2734 4691 BoxF
2736 5643 BoxF
2796 3309 BoxF
2859 6313 BoxF
3077 4607 BoxF
2823 5471 BoxF
2625 5536 BoxF
3180 4169 BoxF
3606 4944 BoxF
2890 5471 BoxF
2680 4294 BoxF
3206 3768 BoxF
3412 3206 BoxF
2915 4478 BoxF
3276 4211 BoxF
3368 2268 BoxF
3113 4573 BoxF
3356 4199 BoxF
3129 4189 BoxF
3576 4596 BoxF
2734 3419 BoxF
2642 4370 BoxF
2796 4452 BoxF
2859 3309 BoxF
3077 4199 BoxF
2539 3309 BoxF
2435 4403 BoxF
3197 3818 BoxF
3043 3801 BoxF
2890 4691 BoxF
% End plot #1
% Begin plot #2
1.667 UP
0.500 UL
LT1
0.00 0.00 1.00 C 2932 3260 DiaF
2371 5232 DiaF
2470 3597 DiaF
2661 5506 DiaF
2451 6073 DiaF
2443 6039 DiaF
2426 6513 DiaF
2593 6782 DiaF
2016 6252 DiaF
2932 4091 DiaF
2371 6403 DiaF
2490 4520 DiaF
2661 4691 DiaF
2451 5964 DiaF
2443 5054 DiaF
2498 3995 DiaF
2593 6744 DiaF
2016 5471 DiaF
2932 3862 DiaF
2450 3801 DiaF
2490 4520 DiaF
2149 3548 DiaF
2661 5147 DiaF
2451 5183 DiaF
2154 4487 DiaF
2498 4357 DiaF
2593 6744 DiaF
% End plot #2
% Begin plot #3
1.667 UP
0.500 UL
LT2
0.00 0.00 1.00 C 3470 1420 Circle
% End plot #3
% Begin plot #4
1.667 UP
0.500 UL
LT3
0.00 0.00 1.00 C 2213 1420 Circle
% End plot #4
% Begin plot #5
4.000 UL
LT4
0.00 0.00 0.00 C 2016 5342 M
3486 4509 L
% End plot #5
% Begin plot #6
stroke
0.500 UL
LT5
0.00 0.00 0.00 C 2016 5629 M
3606 3469 L
% End plot #6
1.000 UP
stroke
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
